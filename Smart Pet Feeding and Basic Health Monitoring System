// =========================================================
// üêæ SmartPet: ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (ESP32 + Blynk + Telegram)
// ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏Å:
// - ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ú‡πà‡∏≤‡∏ô Blynk (‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£, ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì)
// - ‡∏ï‡∏£‡∏ß‡∏à‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢ HX711
// - ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô + ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡πà‡∏≤‡∏ô Telegram
// =========================================================

#define BLYNK_TEMPLATE_ID "TMPL6H4ggjG4y"
#define BLYNK_TEMPLATE_NAME "SmartPet"
#define BLYNK_AUTH_TOKEN "SFvhCDxNdT1pULjFCf9Izo-Zl3LkR4fd"

// ====== ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ ======
#include <WiFi.h>                   // ‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi
#include <WiFiClientSecure.h>       // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ HTTPS (Telegram)
#include <BlynkSimpleEsp32.h>       // ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Blynk ‡∏Å‡∏±‡∏ö ESP32
#include "HX711.h"                  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏≤‡∏Å Load Cell
#include <ESP32Servo.h>             // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Servo motor
#include <TimeLib.h>                // ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤ (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö RTC)
#include <WidgetRTC.h>              // Widget ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô Blynk
#include <math.h>                   // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏π‡∏ï‡∏£‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô
#include <UniversalTelegramBot.h>   // ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ Telegram Bot

// ====== ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• WiFi ======
char ssid[] = "00";
char pass[] = "123456789";

// ====== ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Telegram Bot ======
#define BOT_TOKEN "7905124249:AAGBpb9EwAk4_YeP-zsEHejRW-HsEF62auE"     // ‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
#define CHAT_ID   "8243388341"     // chat id ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ)
WiFiClientSecure client;    // ‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏ö‡∏ö HTTPS
UniversalTelegramBot bot(BOT_TOKEN, client);  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏ö‡∏≠‡∏ó

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ Telegram
void sendTelegram(String msg) {
  if (WiFi.status() == WL_CONNECTED) {
    bot.sendMessage(CHAT_ID, msg, "");
    Serial.println("üì® ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ Telegram: " + msg);
  } else {
    Serial.println("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á Telegram ‡πÑ‡∏î‡πâ (WiFi ‡∏´‡∏•‡∏∏‡∏î)");
  }
}

// ====== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≤ HX711 (‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ä‡∏±‡πà‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å) ======
#define LOADCELL_DOUT_PIN 19
#define LOADCELL_SCK_PIN 18
HX711 scale;  // ‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÄ‡∏ã‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å

// ====== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≤ Servo ======
#define SERVO_PIN 17
Servo feederServo;  // ‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå Servo ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£

// ====== ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö Load Cell ======
float calibration_factor = -7050.0;  // ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≤‡∏•‡∏¥‡πÄ‡∏ö‡∏£‡∏ï
float weight = 0.0;                  // ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ (‡∏Å‡∏£‡∏±‡∏°)

// ====== ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ======
float threshold = 5.0;        // ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡∏≤‡∏î‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ
float targetWeight = 100.0;   // ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
float feedPortion = 0.0;      // ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏°‡∏∑‡πâ‡∏≠
bool systemActive = false;    // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà/‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà)

// ====== ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ======
float dogWeightKg = 0.0;      // ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏™‡∏∏‡∏ô‡∏±‡∏Ç (‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ)
int activityLevel = 1;        // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (0=‡∏ï‡πà‡∏≥,1=‡∏õ‡∏Å‡∏ï‡∏¥,2=‡∏™‡∏π‡∏á)
float kcalPerGram = 3.5;      // ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏±‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)

// ====== ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô ======
int feedCountToday = 0;          // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
float totalFeedWeight = 0.0;     // ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
float totalAccuracyPercent = 0.0;// ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ

// ====== ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ======
int dayCount = 0;               // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∞‡∏™‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
float weeklyFeedWeight = 0.0;   // ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
float weeklyAccuracy = 0.0;     // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
int weeklyFeedCount = 0;        // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå

// ====== ‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ ======
BlynkTimer timer;
WidgetRTC rtc;  // ‡πÄ‡∏ß‡∏•‡∏≤ Blynk (‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)

// ====== ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 3 ‡∏°‡∏∑‡πâ‡∏≠ ======
int breakfastHour = 8,  breakfastMinute = 0;
int lunchHour     = 13, lunchMinute = 0;
int dinnerHour    = 19, dinnerMinute = 0;

// =========================================================
// ü¶¥ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Servo ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£
// =========================================================
void openFeeder() {
  feederServo.write(180);  // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏õ‡∏¥‡∏î
  Serial.println("üçΩÔ∏è [Servo] ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£...");
  Blynk.virtualWrite(V3, 1); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô Blynk
  sendTelegram("üçΩÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß üêæ");
}

void closeFeeder() {
  feederServo.write(0);  // ‡∏´‡∏°‡∏∏‡∏ô Servo ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏¥‡∏î
  Serial.println("üö´ [Servo] ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£");
  Blynk.virtualWrite(V3, 0);
  sendTelegram("‚úÖ ‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
}

// =========================================================
// üî• ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
// =========================================================
float calcDailyKcal(float weight_kg, int actLevel) {
  float base = 110.0 * pow(weight_kg, 0.75);  // ‡∏™‡∏π‡∏ï‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (RER)
  if (actLevel == 0) base *= 0.9;             // ‡∏•‡∏î‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß
  else if (actLevel == 2) base *= 1.1;        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏°‡∏≤‡∏Å
  return base;
}

// ‡πÅ‡∏õ‡∏•‡∏á‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‚Üí ‡∏Å‡∏£‡∏±‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£
float calcFeedGrams(float kcalNeeded, float kcalPerGram) {
  return kcalNeeded / kcalPerGram;
}

// =========================================================
// üçó ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô (‡πÅ‡∏ö‡πà‡∏á 3 ‡∏°‡∏∑‡πâ‡∏≠)
// =========================================================
void computeTarget() {
  if (dogWeightKg > 0 && kcalPerGram > 0) {
    float kcalNeeded = calcDailyKcal(dogWeightKg, activityLevel);
    float grams = calcFeedGrams(kcalNeeded, kcalPerGram);
    targetWeight = grams;
    feedPortion = grams / 3.0; // ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Serial + Blynk
    Serial.println("üìä [Feeding Calculation]");
    Serial.printf("  ‚ñ∏ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏™‡∏∏‡∏ô‡∏±‡∏Ç: %.2f kg\n", dogWeightKg);
    Serial.printf("  ‚ñ∏ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: %d\n", activityLevel);
    Serial.printf("  ‚ñ∏ kcal ‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏±‡∏°: %.2f\n", kcalPerGram);
    Serial.printf("  ‚ûú ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ %.2f kcal/‡∏ß‡∏±‡∏ô ‚âà %.2f g (‡∏°‡∏∑‡πâ‡∏≠‡∏•‡∏∞ %.2f g)\n\n",
                  kcalNeeded, grams, feedPortion);

    Blynk.virtualWrite(V1, targetWeight);  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ
    Blynk.virtualWrite(V10, feedPortion);

    // ‡πÅ‡∏à‡πâ‡∏á‡∏ú‡πà‡∏≤‡∏ô Telegram
    String msg = "üìä ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß\n"
                 "üê∂ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: " + String(dogWeightKg, 1) + " kg\n"
                 "üèÉ‚Äç‚ôÇÔ∏è ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: " + String(activityLevel) + "\n"
                 "üçó ‡∏°‡∏∑‡πâ‡∏≠‡∏•‡∏∞: " + String(feedPortion, 1) + " g";
    sendTelegram(msg);
  }
}

// =========================================================
// üîÅ ‡∏õ‡∏£‡∏±‡∏ö kcal ‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏±‡∏° ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏ï‡∏≤‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å + ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
// =========================================================
void updateKcalPerGram() {
  if (dogWeightKg <= 0) return;

  if (dogWeightKg < 5) kcalPerGram = 3.8;
  else if (dogWeightKg < 15) kcalPerGram = 3.5;
  else kcalPerGram = 3.2;

  if (activityLevel == 0) kcalPerGram *= 0.95;
  else if (activityLevel == 2) kcalPerGram *= 1.05;

  Serial.printf("üî• [Auto kcal/gram]: %.2f kcal/g\n", kcalPerGram);
  Blynk.virtualWrite(V9, kcalPerGram);
}

// =========================================================
// üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£
// =========================================================
void recordDailyFeed(float weightFed, float feedPortion) {
  feedCountToday++;
  totalFeedWeight += weightFed;
  float diffPercent = abs((weightFed - feedPortion) / feedPortion) * 100.0;
  totalAccuracyPercent += (100.0 - diffPercent);

  Serial.printf("üìù [Daily Record] ‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà %d | ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ %.1f g | ‡∏Ñ‡∏•‡∏≤‡∏î‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô %.1f%%\n",
                feedCountToday, weightFed, diffPercent);

  sendTelegram("üïí ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà " + String(feedCountToday) +
               " ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì " + String(weightFed, 1) + " g");
}

// =========================================================
// üìÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô (‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö 3 ‡∏°‡∏∑‡πâ‡∏≠)
// =========================================================
void sendDailyHealthSummary() {
  if (feedCountToday == 0) return;

  float avgFeed = totalFeedWeight / feedCountToday;
  float avgAccuracy = totalAccuracyPercent / feedCountToday;

  String status = "‚úÖ ‡∏õ‡∏Å‡∏ï‡∏¥";
  if (avgAccuracy < 85) status = "‚ö†Ô∏è ‡∏Å‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥";
  else if (avgAccuracy > 115) status = "‚ö†Ô∏è ‡∏Å‡∏¥‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ";

  String summary = "üìÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô\n"
                   "üçΩÔ∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏∑‡πâ‡∏≠: " + String(feedCountToday) + "\n"
                   "‚öñÔ∏è ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: " + String(avgFeed, 1) + " g\n"
                   "üéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: " + String(avgAccuracy, 1) + "%\n"
                   "ü©∫ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: " + status;
  sendTelegram(summary);

  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏õ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
  weeklyFeedCount += feedCountToday;
  weeklyFeedWeight += avgFeed;
  weeklyAccuracy += avgAccuracy;
  dayCount++;

  // üîÅ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà
  feedCountToday = 0;
  totalFeedWeight = 0.0;
  totalAccuracyPercent = 0.0;

  // üìÜ ‡∏Ñ‡∏£‡∏ö 7 ‡∏ß‡∏±‡∏ô ‚Üí ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
  if (dayCount >= 7) sendWeeklyHealthSummary();
}

// =========================================================
// üìÜ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå (‡∏ó‡∏∏‡∏Å 7 ‡∏ß‡∏±‡∏ô)
// =========================================================
void sendWeeklyHealthSummary() {
  if (dayCount == 0) return;

  float avgFeedWeek = weeklyFeedWeight / dayCount;
  float avgAccuracyWeek = weeklyAccuracy / dayCount;
  float avgMeals = (float)weeklyFeedCount / dayCount;

  String status = "‚úÖ ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏Å‡∏ï‡∏¥";
  if (avgAccuracyWeek < 85) status = "‚ö†Ô∏è ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Å‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á";
  else if (avgAccuracyWeek > 115) status = "‚ö†Ô∏è ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Å‡∏¥‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ";

  String weeklyReport = "üìÜ ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå\n"
                        "üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: " + String(dayCount) + "\n"
                        "üçΩÔ∏è ‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô: " + String(avgMeals, 1) + "\n"
                        "‚öñÔ∏è ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: " + String(avgFeedWeek, 1) + " g\n"
                        "üéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: " + String(avgAccuracyWeek, 1) + "%\n"
                        "ü©∫ ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û: " + status;

  sendTelegram(weeklyReport);

  // üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
  dayCount = 0;
  weeklyFeedCount = 0;
  weeklyFeedWeight = 0.0;
  weeklyAccuracy = 0.0;

  Serial.println("‚úÖ [Weekly Summary Sent]");
}

// =========================================================
// ‚öñÔ∏è ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏≤‡∏Å Load Cell
// =========================================================
void readWeight() {
  if (scale.is_ready()) {
    weight = -scale.get_units(10);  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    if (abs(weight) < 1.0) weight = 0.0;

    Serial.printf("ü¶¥ [Weight] ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: %.2f g | ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢/‡∏°‡∏∑‡πâ‡∏≠: %.2f g\n", weight, feedPortion);
    Blynk.virtualWrite(V2, weight);

    // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏° portion ‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏õ‡∏¥‡∏î
    if (systemActive && weight >= feedPortion) {
      closeFeeder();
      systemActive = false;

      recordDailyFeed(weight, feedPortion);

      // ‡∏Ñ‡∏£‡∏ö 3 ‡∏°‡∏∑‡πâ‡∏≠ ‚Üí ‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
      if (feedCountToday >= 3) {
        sendTelegram("üìÖ ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö 3 ‡∏°‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß ‚Äî ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô...");
        sendDailyHealthSummary();
      }
    }
  } else {
    Serial.println("‚ùå [HX711] ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á");
  }
}

// =========================================================
// ‚è∞ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏£‡∏¥‡∏á)
// =========================================================
void checkFeedTime() {
  int h = hour();
  int m = minute();

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ‡πÑ‡∏´‡∏°
  if ((h == breakfastHour && m == breakfastMinute) ||
      (h == lunchHour && m == lunchMinute) ||
      (h == dinnerHour && m == dinnerMinute)) {

    if (!systemActive) {
      openFeeder();
      systemActive = true;

      // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏°‡∏∑‡πâ‡∏≠
      if (h == breakfastHour) sendTelegram("‚è∞ ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡πâ‡∏≤ üê∂");
      else if (h == lunchHour) sendTelegram("‚è∞ ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á üêï");
      else if (h == dinnerHour) sendTelegram("‚è∞ ‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡πá‡∏ô üê©");
    }
  }
}

// =========================================================
// üí¨ BLYNK INPUTS (‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Widget)
// =========================================================
BLYNK_WRITE(V5) { TimeInputParam t(param); if (t.hasStartTime()) { breakfastHour = t.getStartHour(); breakfastMinute = t.getStartMinute(); }}
BLYNK_WRITE(V6) { TimeInputParam t(param); if (t.hasStartTime()) { lunchHour = t.getStartHour(); lunchMinute = t.getStartMinute(); }}
BLYNK_WRITE(V7) { TimeInputParam t(param); if (t.hasStartTime()) { dinnerHour = t.getStartHour(); dinnerMinute = t.getStartMinute(); }}

// ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
BLYNK_WRITE(V4) {
  int pinValue = param.asInt();
  if (pinValue == 1 && !systemActive) {
    openFeeder();
    systemActive = true;
    Blynk.virtualWrite(V4, 0);
  }
}

// ‡∏õ‡πâ‡∏≠‡∏ô‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏™‡∏∏‡∏ô‡∏±‡∏Ç‡∏à‡∏≤‡∏Å Blynk
BLYNK_WRITE(V11) { dogWeightKg = param.asFloat(); updateKcalPerGram(); computeTarget(); }

// ‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏≤‡∏Å Blynk
BLYNK_WRITE(V8) { activityLevel = param.asInt(); updateKcalPerGram(); computeTarget(); }

// =========================================================
// ‚öôÔ∏è Setup ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
// =========================================================
void setup() {
  delay(1000);
  Serial.begin(115200);
  Serial.println("üêæ Starting Smart Pet Feeding System with Weekly Summary...\n");

  // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi
  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\n‚úÖ WiFi Connected!");
  client.setInsecure();
  client.setTimeout(15000);

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö Blynk
  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass);

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Servo
  feederServo.setPeriodHertz(50);
  feederServo.attach(SERVO_PIN, 500, 2400);
  closeFeeder();  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£

  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Load Cell
  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  scale.set_scale(calibration_factor);
  scale.tare();

  // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö
  sendTelegram("üêæ ‡∏£‡∏∞‡∏ö‡∏ö SmartPet ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!");

  // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∏‡∏Å 1 ‡∏ô‡∏≤‡∏ó‡∏µ
  timer.setInterval(1000L, readWeight);
 
